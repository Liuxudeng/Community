<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.MessageMapper">

    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where id in (
        select max(id) from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        group by conversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="int">
        select count(m.maxid) from (
                                       select max(id) as maxid from message
                                       where status != 2
            and from_id != 1
            and (from_id = #{userId} or to_id = #{userId})
                                       group by conversation_id
                                   ) as m
    </select>

    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="com.nowcoder.community.entity.Message" keyProperty="id">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>



    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <!--foreach用法
            collection：要做foreach的对象，作为入参时，List<?>对象默认用list代替作为键，数组对象有array代替作为键，Map对象用map代替作为键，该参数必选；

            item：循环体中的具体对象，支持属性的点路径访问，该参数必选；

            index：在list和数组中,index是元素的序号，在map中，index是元素的key，该参数可选；

            open：foreach代码的开始符号，一般是(和close=")"合用，该参数可选；

            close：foreach代码的关闭符号，一般是)和open="("合用，该参数可选；

            separator：元素之间的分隔符，例如在in()的时候，separator=","会自动在元素中间用“,“隔开，避免手动输入逗号导致sql错误，该参数可选

            -->
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    
    <select id="selectLatestNotice" resultType="com.nowcoder.community.entity.Message">
    select <include refid="selectFields"></include>


    from message
    where id in(
        select max(id) from message
        where status!=2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id=#{topic}
        )
    </select>


    <select id="selectNoticeCount" resultType="int">

        select count(id) from message
        where status!=2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id=#{topic}

    </select>

    <select id="selectNoticeUnreadCount" resultType="int">
        select count(id) from message
        where status =0
        and from_id = 1
        and to_id = #{userId}
            <if test="topic!=null">
                and conversation_id=#{topic}
            </if>



    </select>

    <select id="selectNotices" resultType="com.nowcoder.community.entity.Message">


        select <include refid="selectFields"></include>
            from message
        where status!=2
and from_id =1
and to_id =#{userId}
and conversation_id = #{topic}
order by create_time desc
limit #{offset},#{limit}

    </select>




</mapper>